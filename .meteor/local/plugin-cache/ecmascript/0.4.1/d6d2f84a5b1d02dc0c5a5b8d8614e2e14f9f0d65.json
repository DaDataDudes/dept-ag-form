{"metadata":{"usedHelpers":["interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"graphql-tools","imported":["apolloServer"],"specifiers":[{"kind":"named","imported":"apolloServer","local":"apolloServer"}]},{"source":"express","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"express"}]},{"source":"http-proxy-middleware","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"proxyMiddleware"}]},{"source":"/imports/data/schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"schema"}]},{"source":"/imports/data/resolvers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"resolvers"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/main.js","filenameRelative":"/server/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/main.js.map","sourceFileName":"/server/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"var _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _this = this;\n\nvar _graphqlTools = require('graphql-tools');\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _httpProxyMiddleware = require('http-proxy-middleware');\n\nvar _httpProxyMiddleware2 = _interopRequireDefault(_httpProxyMiddleware);\n\nvar _schema = require('/imports/data/schema');\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nvar _resolvers = require('/imports/data/resolvers');\n\nvar _resolvers2 = _interopRequireDefault(_resolvers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GRAPHQL_PORT = 4000;\n\nvar graphQLServer = (0, _express2['default'])();\n\ngraphQLServer.use('/graphql', (0, _graphqlTools.apolloServer)(function () {\n  function _callee() {\n    return _regenerator2['default'].async(function () {\n      function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt('return', {\n                graphiql: true,\n                pretty: true,\n                schema: _schema2['default'],\n                resolvers: _resolvers2['default']\n              });\n\n            case 1:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }\n\n      return _callee$;\n    }(), null, _this);\n  }\n\n  return _callee;\n}()));\n\ngraphQLServer.listen(GRAPHQL_PORT, function () {\n  return console.log('GraphQL Server is now running on http://localhost:' + GRAPHQL_PORT);\n});\n\nWebApp.rawConnectHandlers.use((0, _httpProxyMiddleware2['default'])('http://localhost:' + GRAPHQL_PORT + '/graphql'));","ast":null,"map":{"version":3,"sources":["/server/main.js"],"names":[],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,eAAe,IAAf;;AAEN,IAAM,gBAAgB,2BAAhB;;AAEN,cAAc,GAAd,CAAkB,UAAlB,EAA8B;AAAa;;;;;;+CAChC;AACL,0BAAU,IAAV;AACA,wBAAQ,IAAR;AACA,2CAHK;AAIL,iDAJK;;;;;;;;;;;;GADgC;;;GAAb,CAA9B;;AASA,cAAc,MAAd,CAAqB,YAArB,EAAmC;SAAM,QAAQ,GAAR,wDACc,YADd;CAAN,CAAnC;;AAIA,OAAO,kBAAP,CAA0B,GAA1B,CAA8B,4DAAoC,yBAApC,CAA9B","file":"/server/main.js.map","sourcesContent":["import { apolloServer } from 'graphql-tools';\nimport express from 'express';\nimport proxyMiddleware from 'http-proxy-middleware';\nimport schema from '/imports/data/schema';\nimport resolvers from '/imports/data/resolvers';\n\nconst GRAPHQL_PORT = 4000;\n\nconst graphQLServer = express();\n\ngraphQLServer.use('/graphql', apolloServer(async () => {\n    return {\n      graphiql: true,\n      pretty: true,\n      schema,\n      resolvers\n    };\n}));\n\ngraphQLServer.listen(GRAPHQL_PORT, () => console.log(\n  `GraphQL Server is now running on http://localhost:${GRAPHQL_PORT}`\n));\n\nWebApp.rawConnectHandlers.use(proxyMiddleware(`http://localhost:${GRAPHQL_PORT}/graphql`));"]},"hash":"d6d2f84a5b1d02dc0c5a5b8d8614e2e14f9f0d65"}
