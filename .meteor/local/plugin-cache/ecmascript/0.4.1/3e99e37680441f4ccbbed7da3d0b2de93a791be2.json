{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"../components/Declare","imported":["default","plantTypes"],"specifiers":[{"kind":"named","imported":"default","local":"Declare"},{"kind":"named","imported":"plantTypes","local":"plantTypes"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/client/containers/DeclareContainer.js","filenameRelative":"/imports/client/containers/DeclareContainer.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/client/containers/DeclareContainer.js.map","sourceFileName":"/imports/client/containers/DeclareContainer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"DeclareContainer"},"ignored":false,"code":"exports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Declare = require('../components/Declare');\n\nvar _Declare2 = _interopRequireDefault(_Declare);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar DeclareContainer = function (_Component) {\n  (0, _inherits3['default'])(DeclareContainer, _Component);\n\n  function DeclareContainer(props) {\n    (0, _classCallCheck3['default'])(this, DeclareContainer);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _Component.call(this, props));\n\n    _this.state = {\n      fruitVeggies: false,\n      cutFlowers: false,\n      rootedPlants: false,\n      rawSeeds: false,\n      soil: false,\n      seafood: false,\n      bacteria: false,\n      insects: false\n    };\n    return _this;\n  }\n\n  DeclareContainer.prototype.render = function () {\n    function render() {\n      var _this2 = this;\n\n      return _react2['default'].createElement(\n        'div',\n        null,\n        _react2['default'].createElement(\n          'div',\n          null,\n          Object.keys(this.state).map(function (field) {\n            return _react2['default'].createElement(\n              'label',\n              { key: field },\n              _react2['default'].createElement('input', { type: 'checkbox',\n                checked: _this2.state[field],\n                onChange: function () {\n                  function onChange(event) {\n                    var _this2$setState;\n\n                    return _this2.setState((_this2$setState = {}, _this2$setState[field] = event.target.checked, _this2$setState));\n                  }\n\n                  return onChange;\n                }() }),\n              ' ',\n              _Declare.plantTypes[field]\n            );\n          })\n        ),\n        _react2['default'].createElement(_Declare2['default'], {\n          onSubmit: this.props.onSubmit,\n          fields: Object.keys(this.state).filter(function (field) {\n            return _this2.state[field];\n          }) })\n      );\n    }\n\n    return render;\n  }();\n\n  return DeclareContainer;\n}(_react.Component);\n//importing a declare compontents\n\n\nDeclareContainer.propTypes = {\n  onSubmit: _react.PropTypes.func.isRequired\n};\n\nexports['default'] = DeclareContainer;","ast":null,"map":{"version":3,"sources":["/imports/client/containers/DeclareContainer.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AAEA;;;;;;IAEM;;;AACJ,WADI,gBACJ,CAAY,KAAZ,EAAmB;2CADf,kBACe;;kEACjB,sBAAM,KAAN,GADiB;;AAEjB,UAAK,KAAL,GAAa;AACX,oBAAc,KAAd;AACA,kBAAY,KAAZ;AACA,oBAAc,KAAd;AACA,gBAAU,KAAV;AACA,YAAM,KAAN;AACA,eAAS,KAAT;AACA,gBAAU,KAAV;AACA,eAAS,KAAT;KARF,CAFiB;;GAAnB;;AADI,6BAeJ;sBAAS;;;AACP,aAAQ;;;QACN;;;UACG,OAAO,IAAP,CAAY,KAAK,KAAL,CAAZ,CAAwB,GAAxB,CAA4B;mBACzB;;gBAAO,KAAK,KAAL,EAAP;cACE,4CAAO,MAAK,UAAL;AACL,yBAAS,OAAK,KAAL,CAAW,KAAX,CAAT;AACA;AAAU;;;2BAAS,OAAK,QAAL,wCAAiB,SAAQ,MAAM,MAAN,CAAa,OAAb,kBAAzB;mBAAT;;;mBAAV,EAFF,CADF;;cAG4E,oBAAY,KAAZ,CAH5E;;WADyB,CAD/B;SADM;QAUN;AACE,oBAAU,KAAK,KAAL,CAAW,QAAX;AACV,kBAAQ,OACL,IADK,CACA,KAAK,KAAL,CADA,CAEL,MAFK,CAEE;mBAAS,OAAK,KAAL,CAAW,KAAX;WAAT,CAFV,EAFF,CAVM;OAAR,CADO;;;;;;SAfL;;;;;AAmCN,iBAAiB,SAAjB,GAA6B;AAC3B,YAAU,iBAAU,IAAV,CAAe,UAAf;CADZ;;qBAIe","file":"/imports/client/containers/DeclareContainer.js.map","sourcesContent":["import React, { Component, PropTypes } from 'react'\n//importing a declare compontents\nimport Declare, { plantTypes } from '../components/Declare'\n\nclass DeclareContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fruitVeggies: false,\n      cutFlowers: false,\n      rootedPlants: false,\n      rawSeeds: false,\n      soil: false,\n      seafood: false,\n      bacteria: false,\n      insects: false\n    }\n  }\n\n  render() {\n    return (<div>\n      <div>\n        {Object.keys(this.state).map(field =>\n            <label key={field}>\n              <input type=\"checkbox\"\n                checked={this.state[field]}\n                onChange={event => this.setState({ [field]: event.target.checked })}/> {plantTypes[ field ]}\n            </label>\n          )}\n      </div>\n      <Declare\n        onSubmit={this.props.onSubmit}\n        fields={Object\n          .keys(this.state)\n          .filter(field => this.state[field])}/>\n    </div>)\n  }\n}\n\nDeclareContainer.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}\n\nexport default DeclareContainer\n"]},"hash":"3e99e37680441f4ccbbed7da3d0b2de93a791be2"}
