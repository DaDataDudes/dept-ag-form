[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/webpack_react/webpack.config.js                                                                     //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar weight = 100;                                                                                               // 1\n                                                                                                                // 2\nfunction dependencies() {                                                                                       // 3\n  return {                                                                                                      // 4\n    dependencies: {                                                                                             // 5\n      'react': '^15.0.0',                                                                                       // 6\n      'react-dom': '^15.0.0',                                                                                   // 7\n      'react-addons-pure-render-mixin': '^15.0.0'                                                               // 8\n    },                                                                                                          // 9\n    devDependencies: {                                                                                          // 10\n      'babel': '^6.3.26',                                                                                       // 11\n      'babel-core': '^6.3.26',                                                                                  // 12\n      'babel-loader' : '^6.2.0',                                                                                // 13\n      'babel-preset-react': '^6.3.13',                                                                          // 14\n      'babel-preset-es2015': '^6.3.13',                                                                         // 15\n      'babel-preset-stage-0': '^6.3.13',                                                                        // 16\n      'babel-plugin-transform-decorators-legacy': '^1.3.2',                                                     // 17\n      'babel-plugin-add-module-exports': '^0.1.2',                                                              // 18\n      'babel-plugin-react-transform': '^2.0.0',                                                                 // 19\n      'expose-loader': '^0.7.1',                                                                                // 20\n      'react-transform-hmr' : '^1.0.1',                                                                         // 21\n      'react-transform-catch-errors': '^1.0.0',                                                                 // 22\n      'redbox-react': '^1.2.0'                                                                                  // 23\n    }                                                                                                           // 24\n  };                                                                                                            // 25\n}                                                                                                               // 26\n                                                                                                                // 27\nfunction config(settings, require) {                                                                            // 28\n  var fs = require('fs');                                                                                       // 29\n  var path = require('path');                                                                                   // 30\n  var babelSettings = {};                                                                                       // 31\n  var tsConfig = {};                                                                                            // 32\n                                                                                                                // 33\n  var CWD = path.resolve('./');                                                                                 // 34\n                                                                                                                // 35\n  if (fs.existsSync(CWD + '/.babelrc')) {                                                                       // 36\n    var babelrc = fs.readFileSync(CWD + '/.babelrc');                                                           // 37\n    babelSettings = JSON.parse(babelrc);                                                                        // 38\n  }                                                                                                             // 39\n                                                                                                                // 40\n  if (fs.existsSync(CWD + '/tsconfig.json')) {                                                                  // 41\n    var tsConfigData = fs.readFileSync(CWD + '/tsconfig.json');                                                 // 42\n    tsConfig = JSON.parse(tsConfigData);                                                                        // 43\n  }                                                                                                             // 44\n                                                                                                                // 45\n  if (!tsConfig.compilerOptions) {                                                                              // 46\n    tsConfig.compilerOptions = {};                                                                              // 47\n  }                                                                                                             // 48\n                                                                                                                // 49\n  if (typeof tsConfig.compilerOptions.target === 'undefined') { tsConfig.compilerOptions.target = 'es6'; }      // 50\n  if (typeof tsConfig.compilerOptions.jsx === 'undefined') { tsConfig.compilerOptions.jsx = 'react'; }          // 51\n  if (typeof tsConfig.compilerOptions.sourceMap === 'undefined') { tsConfig.compilerOptions.sourceMap = true; }\n  if (typeof tsConfig.compilerOptions.experimentalDecorators === 'undefined') { tsConfig.compilerOptions.experimentalDecorators = true; }\n  if (typeof tsConfig.compilerOptions.module === 'undefined') { tsConfig.compilerOptions.module = 'commonjs'; }\n                                                                                                                // 55\n  if (!tsConfig.exclude) { tsConfig.exclude = []; }                                                             // 56\n  if (tsConfig.exclude.indexOf('node_modules') < 0) { tsConfig.exclude.push('node_modules'); }                  // 57\n  if (tsConfig.exclude.indexOf('.meteor') < 0) { tsConfig.exclude.push('.meteor'); }                            // 58\n                                                                                                                // 59\n  if (!babelSettings.presets) {                                                                                 // 60\n    babelSettings.presets = [];                                                                                 // 61\n  }                                                                                                             // 62\n                                                                                                                // 63\n  if (!babelSettings.plugins) {                                                                                 // 64\n    babelSettings.plugins = [];                                                                                 // 65\n  }                                                                                                             // 66\n                                                                                                                // 67\n  if (babelSettings.presets.indexOf('react') < 0) {                                                             // 68\n    babelSettings.presets.push('react');                                                                        // 69\n  }                                                                                                             // 70\n                                                                                                                // 71\n  if (babelSettings.presets.indexOf('es2015') < 0) {                                                            // 72\n    babelSettings.presets.push('es2015');                                                                       // 73\n  }                                                                                                             // 74\n                                                                                                                // 75\n  if (babelSettings.presets.indexOf('stage-0') < 0 &&                                                           // 76\n      babelSettings.presets.indexOf('stage-1') < 0 &&                                                           // 77\n      babelSettings.presets.indexOf('stage-2') < 0 &&                                                           // 78\n      babelSettings.presets.indexOf('stage-3') < 0) {                                                           // 79\n    babelSettings.presets.push('stage-0');                                                                      // 80\n  }                                                                                                             // 81\n                                                                                                                // 82\n  if (settings.babel && settings.babel.plugins) {                                                               // 83\n    babelSettings.plugins = babelSettings.plugins.concat(settings.babel.plugins);                               // 84\n  }                                                                                                             // 85\n                                                                                                                // 86\n  if (babelSettings.plugins.indexOf('transform-decorators-legacy') < 0) {                                       // 87\n    babelSettings.plugins.push('transform-decorators-legacy');                                                  // 88\n  }                                                                                                             // 89\n                                                                                                                // 90\n  if (babelSettings.plugins.indexOf('add-module-exports') < 0) {                                                // 91\n    babelSettings.plugins.push('add-module-exports');                                                           // 92\n  }                                                                                                             // 93\n                                                                                                                // 94\n  if (settings.isDebug && settings.platform !== 'server' && !IS_TEST) {                                         // 95\n    var transforms = [{                                                                                         // 96\n      transform: 'react-transform-hmr',                                                                         // 97\n      imports: ['react'],                                                                                       // 98\n      locals: ['module']                                                                                        // 99\n    }];                                                                                                         // 100\n                                                                                                                // 101\n    if (settings.babel && !settings.babel.disableRedbox) {                                                      // 102\n      transforms.push({                                                                                         // 103\n        transform: 'react-transform-catch-errors',                                                              // 104\n        imports: ['react', 'redbox-react']                                                                      // 105\n      });                                                                                                       // 106\n    }                                                                                                           // 107\n                                                                                                                // 108\n    babelSettings.plugins.push(['react-transform', { transforms: transforms }]);                                // 109\n  }                                                                                                             // 110\n                                                                                                                // 111\n  var usingMeteorReact = settings.packages.indexOf('react-runtime') >= 0;                                       // 112\n  var extensions = ['.js', '.jsx'];                                                                             // 113\n  var loaders = [                                                                                               // 114\n    { test: /\\/node_modules\\/react\\/react\\.js$/, loader: 'expose?React' },                                      // 115\n    { test: /\\.jsx?$/, loader: 'babel', query: babelSettings, exclude: /\\.meteor|node_modules/ }                // 116\n  ];                                                                                                            // 117\n                                                                                                                // 118\n  if (settings.packages.indexOf('webpack:typescript') >= 0) {                                                   // 119\n    loaders.push({ test: /\\.tsx$/, loader: 'babel?' + JSON.stringify(babelSettings) + '!ts?' + JSON.stringify(tsConfig), exclude: /\\.meteor|node_modules/ });\n    extensions.push('.tsx');                                                                                    // 121\n  }                                                                                                             // 122\n                                                                                                                // 123\n  var externals = {};                                                                                           // 124\n                                                                                                                // 125\n  if (settings.isTest || settings.isAppTest) {                                                                  // 126\n    // Support for Enzyme                                                                                       // 127\n    externals['react/addons'] = true;                                                                           // 128\n    externals['react/lib/ExecutionEnvironment'] = true;                                                         // 129\n    externals['react/lib/ReactContext'] = true;                                                                 // 130\n  }                                                                                                             // 131\n                                                                                                                // 132\n  return {                                                                                                      // 133\n    loaders: loaders,                                                                                           // 134\n    extensions: extensions,                                                                                     // 135\n    externals: externals                                                                                        // 136\n  };                                                                                                            // 137\n}                                                                                                               // 138\n                                                                                                                // 139\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['webpack:react'] = {};\n\n})();\n","servePath":"/packages/webpack_react.js"}]