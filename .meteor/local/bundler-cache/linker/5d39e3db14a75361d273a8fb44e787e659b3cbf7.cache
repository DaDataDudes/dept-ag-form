[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"data\":{\"resolvers.js\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/data/resolvers.js                                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nexports.__esModule = true;                                                                                             //\nvar resolvers = {};                                                                                                    // 1\n                                                                                                                       //\nexports[\"default\"] = resolvers;                                                                                        //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/data/schema.js                                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nexports.__esModule = true;                                                                                             //\nexports[\"default\"] = schema = [\"\\n  type Form {\\n    id: String\\n  }\\n\\n  type Mutation {\\n    submitForm(id: String): Form\\n  }\\n\\n  type Query {\\n    form(id: String): Form\\n  }\\n\\n  schema {\\n    query: Query\\n    mutation: Mutation;\\n  }\\n\"];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":[\"babel-runtime/regenerator\",\"graphql-tools\",\"express\",\"http-proxy-middleware\",\"/imports/data/schema\",\"/imports/data/resolvers\",function(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// server/main.js                                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _regenerator = require('babel-runtime/regenerator');                                                               //\n                                                                                                                       //\nvar _regenerator2 = _interopRequireDefault(_regenerator);                                                              //\n                                                                                                                       //\nvar _this = this;                                                                                                      //\n                                                                                                                       //\nvar _graphqlTools = require('graphql-tools');                                                                          // 1\n                                                                                                                       //\nvar _express = require('express');                                                                                     // 2\n                                                                                                                       //\nvar _express2 = _interopRequireDefault(_express);                                                                      //\n                                                                                                                       //\nvar _httpProxyMiddleware = require('http-proxy-middleware');                                                           // 3\n                                                                                                                       //\nvar _httpProxyMiddleware2 = _interopRequireDefault(_httpProxyMiddleware);                                              //\n                                                                                                                       //\nvar _schema = require('/imports/data/schema');                                                                         // 4\n                                                                                                                       //\nvar _schema2 = _interopRequireDefault(_schema);                                                                        //\n                                                                                                                       //\nvar _resolvers = require('/imports/data/resolvers');                                                                   // 5\n                                                                                                                       //\nvar _resolvers2 = _interopRequireDefault(_resolvers);                                                                  //\n                                                                                                                       //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                        //\n                                                                                                                       //\nvar GRAPHQL_PORT = 4000;                                                                                               // 7\n                                                                                                                       //\nvar graphQLServer = (0, _express2['default'])();                                                                       // 9\n                                                                                                                       //\ngraphQLServer.use('/graphql', (0, _graphqlTools.apolloServer)(function () {                                            // 11\n  function _callee() {                                                                                                 // 11\n    return _regenerator2['default'].async(function () {                                                                //\n      function _callee$(_context) {                                                                                    //\n        while (1) {                                                                                                    //\n          switch (_context.prev = _context.next) {                                                                     //\n            case 0:                                                                                                    //\n              return _context.abrupt('return', {                                                                       //\n                graphiql: true,                                                                                        // 13\n                pretty: true,                                                                                          // 14\n                schema: _schema2['default'],                                                                           // 15\n                resolvers: _resolvers2['default']                                                                      // 16\n              });                                                                                                      //\n                                                                                                                       //\n            case 1:                                                                                                    //\n            case 'end':                                                                                                //\n              return _context.stop();                                                                                  //\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return _callee$;                                                                                                 //\n    }(), null, _this);                                                                                                 //\n  }                                                                                                                    //\n                                                                                                                       //\n  return _callee;                                                                                                      //\n}()));                                                                                                                 //\n                                                                                                                       //\ngraphQLServer.listen(GRAPHQL_PORT, function () {                                                                       // 20\n  return console.log('GraphQL Server is now running on http://localhost:' + GRAPHQL_PORT);                             //\n});                                                                                                                    //\n                                                                                                                       //\nWebApp.rawConnectHandlers.use((0, _httpProxyMiddleware2['default'])('http://localhost:' + GRAPHQL_PORT + '/graphql'));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/data/resolvers.js","/imports/data/schema.js","/server/main.js"],"names":[],"mappings":";;;;;;;;;AAAA,IAAM,YAAY,EAAZ;;qBAIS,oG;;;;;;;;;;;;qBCJA,SAAS,uNAAT,C;;;;;;;;;;;;;;;;;ACAf;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,eAAe,IAAf;;AAEN,IAAM,gBAAgB,2BAAhB;;AAEN,cAAc,GAAd,CAAkB,UAAlB,EAA8B;AAAa;;;;;;+CAChC;AACL,0BAAU,IAAV;AACA,wBAAQ,IAAR;AACA,2CAHK;AAIL,iDAJK;;;;;;;;;;;;GADgC;;;GAAb,CAA9B;;AASA,cAAc,MAAd,CAAqB,YAArB,EAAmC;SAAM,QAAQ,GAAR,wDACc,YADd;CAAN,CAAnC;;AAIA,OAAO,kBAAP,CAA0B,GAA1B,CAA8B,4DAAoC,yBAApC,CAA9B,E","file":"/app.js","sourcesContent":["const resolvers = {\n\n};\n\nexport default resolvers;","export default schema = [`\n  type Form {\n    id: String\n  }\n\n  type Mutation {\n    submitForm(id: String): Form\n  }\n\n  type Query {\n    form(id: String): Form\n  }\n\n  schema {\n    query: Query\n    mutation: Mutation;\n  }\n`];","import { apolloServer } from 'graphql-tools';\nimport express from 'express';\nimport proxyMiddleware from 'http-proxy-middleware';\nimport schema from '/imports/data/schema';\nimport resolvers from '/imports/data/resolvers';\n\nconst GRAPHQL_PORT = 4000;\n\nconst graphQLServer = express();\n\ngraphQLServer.use('/graphql', apolloServer(async () => {\n    return {\n      graphiql: true,\n      pretty: true,\n      schema,\n      resolvers\n    };\n}));\n\ngraphQLServer.listen(GRAPHQL_PORT, () => console.log(\n  `GraphQL Server is now running on http://localhost:${GRAPHQL_PORT}`\n));\n\nWebApp.rawConnectHandlers.use(proxyMiddleware(`http://localhost:${GRAPHQL_PORT}/graphql`));"]}}]